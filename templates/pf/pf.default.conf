#
### pf.conf : {{ pf_mode }}
#
# Required order: options, normalization, queueing, translation, filtering.
# Note: translation rules are first match while filter rules are last match.


### Interfaces ###
 loop_if = "lo0"

{% if pf_mode == 'router' %}
 lan_if = "{{ pf_lan_if }}"
 lan_net = $lan_if:network
{% endif %}

 ext_if = "{{ pf_ext_if }}"

 martians = "{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, \
 	       10.0.0.0/8, 169.254.0.0/16, 192.0.2.0/24, \
	       0.0.0.0/8, 240.0.0.0/4 }"

 # no: ntp, ftp
 in_tcp_services = "{domain, smtp, smtps, http, https}"
 in_udp_services = "{domain}"


### Hosts ###


### Queues, States and Types ###
 IcmpPing = "icmp-type 8 code 0"
 SshQueue = "(ssh_bulk, ssh_login)"
 SynState = "flags S/UAPRSF synproxy state"
# TcpState = "flags S/SA modulate state"
 TcpState = "flags S/UAPRSF modulate state"
 UdpState = "keep state"


### Stateful Tracking Options (STO) ###
 OpenSTO ="(max 90000, source-track rule, max-src-conn 1000, max-src-nodes 256)"
 SmtpSTO ="(max   200, source-track rule, max-src-conn   10, max-src-nodes 256, max-src-conn-rate 200/30)"
 SshSTO  ="(max   100, source-track rule, max-src-conn   10, max-src-nodes 100, max-src-conn-rate 100/30,  overload <BLOCKTEMP> flush global)"
 WebSTO  ="(max  4096, source-track rule, max-src-conn   64, max-src-nodes 512, max-src-conn-rate 500/100, overload <BLOCKTEMP> flush global)"


### Tables ###
 table <BLACKHOLE> persist file "/etc/pf.blackhole"
 # dump mem-to-file : pfctl -t blackhole -T show >/etc/pf.blackhole
 # load file-to-mem : pfctl -t blackhole -T replace -f /etc/pf.blackhole

 table <BRUTEFORCE> persist file "/etc/pf.bruteforce"
 # expire > 24h : pfctl -t bruteforce -T expire 86400
 # expire > 10d : /usr/local/sbin/expiretable -v -d -t 24h bruteforce

 table <knockers> persist
 table <knockers_ssh> persist

 table <sshguard> persist


### Misc Options ###
 set skip on lo
 set debug urgent
 set block-policy drop
 set loginterface $ext_if
 set state-policy if-bound
 set fingerprints "/etc/pf.os"
 set ruleset-optimization none


### Timeout Options ###
 set optimization normal
 set timeout { tcp.closing 60, tcp.established 7200}


### Normalization ###
# scrub out log on $lan_if all random-id min-ttl 15 set-tos 0x2E fragment reassemble
# scrub     log on $lan_if all reassemble tcp fragment reassemble
 scrub      log on $ext_if all reassemble tcp no-df random-id
# scrub in all
 scrub all


### NAT and Redirection ###
{% if pf_mode == 'router' %}
 # ext_if IP address could be dynamic, hence ($ext_if)
 nat on $ext_if from $lan_net to any -> ($ext_if)

 # redirect
 rdr-anchor "tv"

 #rdr on $ext_if proto { tcp, udp } from any to any port 60100 -> 192.168.0.100
{% endif %}

 # DENY rogue redirection
 no rdr


### Filtering ###
 ### default
 block log all

 ### no back routes for
 block drop  in log quick from no-route to any

 ### BLACKHOLE
 block drop     log quick from <BLACKHOLE>
 block drop     log quick to   <BLACKHOLE>

 ### BRUTEFORCE
 block drop     log quick from <BRUTEFORCE>
# block drop     log quick to   <BRUTEFORCE>

 ### sshguard
 block drop     log quick from <sshguard>

{% if pf_mode == 'router' %}
 ### martians
 block drop in quick on $ext_if from $martians to any
 block drop out quick on $ext_if from any to $martians
{% endif %}

 ### drop broadcast
 block in log quick on $ext_if from any to 255.255.255.255

 ### block probes that can possibly determine our operating system by disallowing
 ### certain combinations that are commonly used by nmap, queso and xprobe2, who
 ### are attempting to fingerprint the server.
 ### * F : FIN  - Finish; end of session
 ### * S : SYN  - Synchronize; indicates request to start session
 ### * R : RST  - Reset; drop a connection
 ### * P : PUSH - Push; packet is sent immediately
 ### * A : ACK  - Acknowledgement
 ### * U : URG  - Urgent
 ### * E : ECE  - Explicit Congestion Notification Echo
 ### * W : CWR  - Congestion Window Reduced
 block in log quick on $ext_if proto tcp flags FUP/WEUAPRSF
 block in log quick on $ext_if proto tcp flags WEUAPRSF/WEUAPRSF
 block in log quick on $ext_if proto tcp flags SRAFU/WEUAPRSF
 block in log quick on $ext_if proto tcp flags /WEUAPRSF
 block in log quick on $ext_if proto tcp flags SR/SR
 block in log quick on $ext_if proto tcp flags SF/SF

 ### loopback
 antispoof quick for $loop_if
 pass quick on $loop_if

 ### return is nicer than drop for internal usage
 block return out log on $ext_if
{% if pf_mode == 'router' %}
 block return     log on $lan_if
{% endif %}

 ### antispoof
 antispoof quick for $ext_if
{% if pf_mode == 'router' %}
 antispoof quick for $lan_if
{% endif %}

{% if pf_mode == 'router' %}
 ### lan_if in
 pass in on $lan_if proto tcp  from $lan_if:network to any $TcpState $OpenSTO
 pass in on $lan_if proto udp  from $lan_if:network to any $UdpState $OpenSTO
 pass in on $lan_if proto icmp from $lan_if:network to any $UdpState $OpenSTO

 ### lan_if out
 pass out on $lan_if proto tcp  all $TcpState $OpenSTO
 pass out on $lan_if proto udp  all $UdpState $OpenSTO
 pass out on $lan_if proto icmp all $UdpState $OpenSTO
{% endif %}

 ### ext_if in
 #pass in log on $ext_if proto tcp  from any to any port ssh $SynState
 #pass in log on $ext_if proto tcp  from any to any port www $SynState
 pass in log on $ext_if proto tcp  from any to any port $in_tcp_services $TcpState
 pass in log on $ext_if proto tcp  from any to any port $in_udp_services $UdpState
 pass in log on $ext_if proto icmp from any to any $IcmpPing             $UdpState
{% if want_max_security %}
 pass in log on $ext_if proto tcp from { <knockers>, <knockers_ssh> } to any port ssh label knockers_ssh $TcpState \
      (max-src-conn 10, max-src-conn-rate 20/60, overload <BRUTEFORCE> flush global)
{% else %}
 pass in log on $ext_if proto tcp from any to any port ssh $TcpState \
      (max-src-conn 10, max-src-conn-rate 20/60, overload <BRUTEFORCE> flush global)
{% endif %}

 ### ext_if out
 pass out log on $ext_if inet proto tcp  $TcpState $OpenSTO
 pass out log on $ext_if inet proto udp  $UdpState $OpenSTO
 pass out log on $ext_if inet proto icmp $UdpState $OpenSTO

 ### tv
 anchor "tv"
 #pass in quick on $ext_if proto { tcp, udp } from any to any port 60100:60254
